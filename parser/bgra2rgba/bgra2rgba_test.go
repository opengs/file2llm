package bgra2rgba

import (
	"bytes"
	"testing"
)

func TestConvertBGRAtoRGBA_InPlace(t *testing.T) {
	width, height := 4, 2
	stride := 4 * width
	data := []byte{
		0xFF, 0x00, 0x00, 0x00,
		0x00, 0xFF, 0x00, 0xFF,
		0x00, 0x00, 0xFF, 0x00,
		0xFF, 0xFF, 0x00, 0xFF,
		0xFF, 0x00, 0x00, 0x00,
		0x00, 0xFF, 0x00, 0xFF,
		0x00, 0x00, 0xFF, 0x00,
		0xFF, 0xFF, 0x00, 0xFF,
	}

	// Convert BGRA to RGBA in-place
	ConvertBGRAtoRGBAInplace(width, height, stride, data)

	// Expected output after in-place conversion
	expected := []byte{
		0x00, 0x00, 0xFF, 0x00,
		0x00, 0xFF, 0x00, 0xFF,
		0xFF, 0x00, 0x00, 0x00,
		0x00, 0xFF, 0xFF, 0xFF,
		0x00, 0x00, 0xFF, 0x00,
		0x00, 0xFF, 0x00, 0xFF,
		0xFF, 0x00, 0x00, 0x00,
		0x00, 0xFF, 0xFF, 0xFF,
	}

	// Check if the data is correctly modified
	if !bytes.Equal(data, expected) {
		t.Errorf("Expected %v, got %v", expected, data)
	}
}
